{"version":3,"sources":["components/Springboard.js","components/matboard.js","view/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Springboard","react_default","a","createElement","className","id","data-tool-tip","href","target","rel","Component","Matboard","Nav","src","alt","Link","to","pathname","App","view_Nav","Route","exact","path","process","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cd31461.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// break pts <1160px[largest] split 2 columns\r\n// <800 1 column\r\n// 1 way to do it is to change the classes according to screen width via scripts\r\n//another way is via media queries\r\n// note this was an exercise in trying to understand how libraries such as material-ui\r\n// work behind all the blackbox magic\r\n\r\nclass Springboard extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"grid\">\r\n        <div className='cell cell2' id='profile'>\r\n          <div className='cell-text cell-header'>\r\n            <span>James Bui</span>\r\n            <span>757.746.8618</span>\r\n            <span>buijvbio@gmail.com</span>\r\n          </div>\r\n          <div className='cell-body inline'>\r\n            Hi there! I am a recently graduated front-end web developer looking for new opportunities! I have a nanodegree from\r\n              <a className='cell-link inline-link' id='udacity-degree-link' data-tool-tip='Google and AT&T backed coding nanodegree which included over 1200 hours of intensive deadline-based self study. Material covered included HTML5, CSS, ES6 JS, frameworks such as React, Angular, Ember with dedicated projects in React.' href='https://confirm.udacity.com/PVJXEUHH'>\r\n                Udacity\r\n              </a>\r\n            and a certification from\r\n              <a className='cell-link inline-link' id='fcc-cert-link' data-tool-tip='12 Front end projects (Simon Says game, calculator, wiki search engine) covering HTML, CSS and over 400 hours of pure javascript algorithms and data structures practice.' href='https://www.freecodecamp.org/naiyachiri/front-end-certification'>\r\n              FreeCodeCamp\r\n            </a>.\r\n          </div>\r\n          <div className='cell-text cell-footer'>\r\n            <a href='https://www.linkedin.com/in/buijames' target='_blank' rel='noopener noreferrer' id='linkedin-link'>\r\n              Linkedin\r\n            </a>\r\n            <a href='https://github.com/Naiyachiri/thePlayground' id='github-link'>\r\n              GitHub\r\n            </a>\r\n            <a href='https://drive.google.com/open?id=14wLbcDQbXjqnTSxmApYWtM0KcckNJQ_g4OXqIe7TJ-0' id='resume-link' target='_blank' rel='noopener noreferrer'>\r\n              Resume\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className='cell cell1' id='js-calculator-cell'>\r\n          <div className='cell-header'>\r\n            <a className='cell-link project-link' id='js-calc-link' href='https://codepen.io/naiyachiri/full/jarQpa/' rel='noopener noreferrer'  data-tool-tip='This is calculator that uses jQuery, Javascript, and Bootstrap.' target='_blank'>\r\n              JS Calculator\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className='cell cell1' id='tic-tac-toe-cell'>\r\n        <div className='cell-header'>\r\n            <a className='cell-link project-link' id='tic-tac-toe-link' href='https://codepen.io/naiyachiri/full/bYaPOB/' rel='noopener noreferrer'  data-tool-tip='This is a tic tac toe game implementation using jQuery, Javascript, and Bootstrap.' target='_blank'>\r\n              Tic Tac Toe Game\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className='cell cell4' id='neighborhood-map-cell'>\r\n          <div className='cell-header'>\r\n            <a className='cell-link project-link' id='neighborhood-map-link' href='http://naiyachiri.github.io/fend-neighborhood-map' rel='noopener noreferrer'  data-tool-tip='React based google API powered application that tracks coffee shops in the Springfield, VA area. It uses Google and Foursquare to search, and dynamically generate info windows for the user.' target='_blank'>\r\n              Northern Virginia Coffee Tracker\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='cell cell1 cell-blog'>\r\n          <div className='cell-text cell-header'>\r\n            <h3>Recent Activity: </h3>\r\n          </div>\r\n        <div className='cell-blog-content'>\r\n          <h4 className='cell-blog-subheading'>18 Dec 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: ranking-poker-hands\r\n            </p>\r\n          <h4 className='cell-blog-subheading'>14 Dec 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: the-observed-pin\r\n            </p>\r\n          <h4 className='cell-blog-subheading'>12 Dec 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: extract-domain-name\r\n            </p>\r\n          <h4 className=\"cell-blog-subheading\">10 Dec 2018: </h4>\r\n            <p className=\"cell-blog-article\">\r\n              Added coding-practice: regex-pw-validation\r\n            </p>\r\n            <h4 className='cell-blog-subheading'>8 Dec 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: direction-reduction\r\n            </p>\r\n          <h4 className='cell-blog-subheading'>6 Dec 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: scramblies\r\n            </p>\r\n          <h4 className='cell-blog-subheading'>5 Dec 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: find-the-int, valid-braces, multiples-of-3-or-5\r\n            </p>\r\n          <h4 className='cell-blog-subheading'>2 Dec 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: persistent-bugger\r\n            </p>\r\n            <h4 className='cell-blog-subheading'>1 Dec 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: format-a-string-of-names, square-every-digit\r\n            </p>\r\n            <h4 className='cell-blog-subheading'>30 Nov 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: format-a-string-of-names, square-every-digit\r\n            </p>\r\n            <h4 className='cell-blog-subheading'>30 Nov 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice: highest-to-lowest, vowel-count\r\n            </p>\r\n            <h4 className='cell-blog-subheading'>29 Nov 2018: </h4>\r\n            <p className='cell-blog-article'>\r\n              Added coding-practice to personal repository, see new exercises each day!\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='cell cell3' id='fend-arcade-game-cell'>\r\n        <div className='cell-header'>\r\n          <a className='cell-link project-link' id='fend-arcade-game-link' href='https://naiyachiri.github.io/fend-arcade-game' rel='noopener noreferrer'  data-tool-tip='This is a bootleg frogger game that runs off jQuery and functions by constantly re-rendering the image to simulate movement' target='_blank'>\r\n            FEND Arcade Game\r\n          </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Springboard;\r\n","// the goal of this is to apply springboard and customize it to a higher degree\r\n\r\nimport React, { Component } from 'react';\r\n\r\n//short for material-ui springboard\r\nclass Matboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        so begins creation of material-ui powered springboard!\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Matboard","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Nav extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\">\r\n        <img src='http://unsplash.it/50/50' alt='place holder logo'></img>\r\n        <Link to={{ pathname: '/'}}>\r\n          <p className='nav-item'>Home</p>\r\n        </Link>\r\n        <Link to={{ pathname: '/'}}>\r\n          <p className='nav-item'>About</p>\r\n        </Link>\r\n        <Link to={{ pathname: '/'}}>\r\n          <p className='nav-item'>Projects</p>\r\n        </Link>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Springboard from './components/Springboard';\r\nimport Matboard from './components/matboard';\r\nimport Nav from './view/Nav';\r\nimport './App.css';\r\nimport './responsive.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Nav />\r\n        <main>\r\n          <Route exact path={process.env.PUBLIC_URL + '/'} component={Springboard}/>\r\n          <Route exact path={process.env.PUBLIC_URL + '/matboard'} component={Matboard}/>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}